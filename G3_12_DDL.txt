CREATE SCHEMA ride_sharing;
SET search_path TO ride_sharing;

-- 2. Tables

CREATE TABLE "USER" (
    USER_ID INT PRIMARY KEY,
    NAME VARCHAR(100),
    EMAIL_ID VARCHAR(100) UNIQUE,
    PHONE_NUMBER VARCHAR(15),
    PAY_ID INT,
    DRIVER_ID INT,
    RIDE_ID INT
);

CREATE TABLE DRIVER (
    DRIVER_ID INT PRIMARY KEY,
    VEHICLE_ID INT,
    PHONE_NUMBER VARCHAR(15),
    EMAIL_ID VARCHAR(100),
    NAME VARCHAR(100),
    LICENSE_NO VARCHAR(50)
);

CREATE TABLE VEHICLES (
    VEHICLE_ID INT PRIMARY KEY,
    DRIVER_ID INT,
    TYPE VARCHAR(50),
    MODEL VARCHAR(50)
);

CREATE TABLE RIDE (
    RIDE_ID INT PRIMARY KEY,
    START_TIME TIMESTAMP,
    END_TIME TIMESTAMP,
    PICKUP VARCHAR(255),
    USER_ID INT,
    STATUS VARCHAR(50),
    DROPOFF VARCHAR(255),
    FARE DECIMAL(10,2),
    VEHICLE_ID INT,
    RATING_ID INT,
    PAY_ID INT
);

CREATE TABLE PAYMENT (
    PAY_ID INT PRIMARY KEY,
    RIDE_ID INT,
    USER_ID INT,
    PROMO_ID INT,
    STATUS VARCHAR(50),
    PAY_MODE VARCHAR(50),
    FINAL_AMOUNT DECIMAL(10,2)
);

CREATE TABLE DISCOUNTS (
    PROMO_ID INT PRIMARY KEY,
    ATTRIBUTE VARCHAR(100),
    EXPIRY_DATE DATE,
    CODE VARCHAR(50),
    OFF_AMT DECIMAL(10,2),
    USER_ID INT,
    PAY_ID INT
);

CREATE TABLE RATING (
    RATING_ID INT PRIMARY KEY,
    REVIEW TEXT,
    RATING INT CHECK (RATING BETWEEN 1 AND 5),
    USER_ID INT,
    DRIVER_ID INT
);

CREATE TABLE CANCELS (
    USER_ID INT,
    RIDE_ID INT,
    CANCEL_TIME TIMESTAMP,
    PENALTY DECIMAL(10,2),
    PRIMARY KEY (USER_ID, RIDE_ID)
);

CREATE TABLE OWNS (
    VEHICLE_ID INT,
    DRIVER_ID INT,
    PRIMARY KEY (VEHICLE_ID, DRIVER_ID)
);

CREATE TABLE ACCEPTS (
    DRIVER_ID INT,
    RIDE_ID INT,
    PROFIT_EARNED DECIMAL(10,2),
    PRIMARY KEY (DRIVER_ID, RIDE_ID)
);

CREATE TABLE RECEIVES (
    DRIVER_ID INT,
    RIDE_ID INT,
    PRIMARY KEY (DRIVER_ID, RIDE_ID)
);

-- 3. Foreign Keys

ALTER TABLE "USER"
    ADD FOREIGN KEY (PAY_ID) REFERENCES PAYMENT(PAY_ID),
    ADD FOREIGN KEY (DRIVER_ID) REFERENCES DRIVER(DRIVER_ID),
    ADD FOREIGN KEY (RIDE_ID) REFERENCES RIDE(RIDE_ID);

ALTER TABLE RIDE
    ADD FOREIGN KEY (USER_ID) REFERENCES "USER"(USER_ID),
    ADD FOREIGN KEY (VEHICLE_ID) REFERENCES VEHICLES(VEHICLE_ID),
    ADD FOREIGN KEY (RATING_ID) REFERENCES RATING(RATING_ID),
    ADD FOREIGN KEY (PAY_ID) REFERENCES PAYMENT(PAY_ID);

ALTER TABLE DISCOUNTS
    ADD FOREIGN KEY (USER_ID) REFERENCES "USER"(USER_ID),
    ADD FOREIGN KEY (PAY_ID) REFERENCES PAYMENT(PAY_ID);

ALTER TABLE RATING
    ADD FOREIGN KEY (USER_ID) REFERENCES "USER"(USER_ID),
    ADD FOREIGN KEY (DRIVER_ID) REFERENCES DRIVER(DRIVER_ID);

ALTER TABLE CANCELS
    ADD FOREIGN KEY (USER_ID) REFERENCES "USER"(USER_ID),
    ADD FOREIGN KEY (RIDE_ID) REFERENCES RIDE(RIDE_ID);

ALTER TABLE OWNS
    ADD FOREIGN KEY (VEHICLE_ID) REFERENCES VEHICLES(VEHICLE_ID),
    ADD FOREIGN KEY (DRIVER_ID) REFERENCES DRIVER(DRIVER_ID);

ALTER TABLE ACCEPTS
    ADD FOREIGN KEY (DRIVER_ID) REFERENCES DRIVER(DRIVER_ID),
    ADD FOREIGN KEY (RIDE_ID) REFERENCES RIDE(RIDE_ID);

ALTER TABLE RECEIVES
    ADD FOREIGN KEY (DRIVER_ID) REFERENCES DRIVER(DRIVER_ID),
    ADD FOREIGN KEY (RIDE_ID) REFERENCES RIDE(RIDE_ID);